{"version":3,"sources":["history.js","Reducer.js","components/auth/types.js","Store.js","components/Header.js","components/Footer.js","components/Home.js","components/About.js","components/ProductForm.js","components/CategoryForm.js","components/AdminDashboard.js","components/StoreMenu.js","components/auth/actions.js","components/utils/Auth.js","components/Admin.js","components/Login.js","index.js","components/App.js"],"names":["createBrowserHistory","userInitialState","rootReducer","user","state","action","type","data","token","config","key","storage","reducer","persistCombineReducers","store","createStore","undefined","compose","applyMiddleware","createLogger","persistor","persistStore","Header","props","makeMenuItems","getState","console","log","menuItems","text","to","isEmpty","icon","_","uniqBy","item","map","Menu","Item","as","NavLink","selected","history","location","pathname","Icon","name","handleClick","e","setState","active","push","refresh","obj","hasOwnProperty","path","window","split","this","activeItem","secondary","src","alt","Component","connect","Footer","width","height","style","border","overflow","scrolling","frameBorder","allowtransparency","allow","Home","clicked","Container","id","Button","primary","size","className","onClick","from","display","class","About","ProductForm","submitForm","a","async","fetch","method","cache","headers","body","JSON","stringify","form","then","res","json","created","code","name_en","name_th","price","description","category","takeaway","categories","values","index","_id","categoryValues","value","Form","Group","widths","Field","control","Input","label","placeholder","onChange","Select","options","TextArea","Checkbox","content","CategoryForm","AdminDashboard","openModalHandler","isShowing","closeModalHandler","Segment","marginTop","Grid","columns","stackable","textAlign","Divider","vertical","Row","Column","Modal","dimmer","centered","trigger","styling","Content","StoreMenu","products","catch","err","adminButton","marginLeft","marginRight","marginBottom","selectable","Table","basic","HeaderCell","product","flavour","setToken","storeUserDetails","logout","dispatch","Admin","Login","checkUser","success","isAuthenticated","forceUpdate","login","username","password","showPassword","isLoading","eyeToggle","link","borderRadius","color","autoFocus","autoComplete","fluid","backgroundColor","ReactDOM","render","component","document","getElementById"],"mappings":"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","file":"static/js/main.a81d9925.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import * as actionType from \"./components/auth/types\"\n\nconst tokenInitialState = null;\nconst userInitialState = {};\n\nconst token = (state = tokenInitialState, action) => {\n  switch (action.type) {\n    case actionType.STORE_TOKEN:\n      return action.data;\n    case actionType.REMOVE_TOKEN:\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst user = (state = userInitialState, action) => {\n  switch (action.type) {\n    case actionType.STORE_USER:\n      return action.data;\n    case actionType.REMOVE_USER:\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = {\n  user,\n  token\n};\n\n// const rootReducer = (state, action) => {\n//   return appReducer;\n// };\n\nexport default rootReducer\n","// token types\nexport const STORE_TOKEN = \"STORE_TOKEN\";\nexport const REMOVE_TOKEN = \"REMOVE_TOKEN\";\n\n// user types\nexport const STORE_USER = \"STORE_USER\";\nexport const REMOVE_USER = \"REMOVE_USER\";\n","import {compose, createStore, applyMiddleware} from 'redux';\nimport {createLogger} from 'redux-logger';\nimport rootReducer from './Reducer';\nimport {persistCombineReducers, persistStore} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst config = {\n  key: 'root',\n  storage\n};\n\nlet reducer = persistCombineReducers(config, rootReducer);\n\nexport const store = createStore(\n  reducer,\n  undefined,\n  compose(\n    applyMiddleware(createLogger()),\n  )\n);\n\nexport const persistor = persistStore(store);","import React, { Component } from 'react';\nimport {Menu, Icon} from 'semantic-ui-react';\nimport history from '../history'\nimport {store} from '../Store'\nimport {Link, NavLink} from \"react-router-dom\";\nimport _ from 'lodash';\nimport {connect} from \"react-redux\"; \nclass Header extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n\n            active: 'home',\n            refresh: false\n        }\n    }\n\n    isEmpty(obj) {\n        for(var key in obj) {\n            if(obj.hasOwnProperty(key))\n                return false;\n        }\n        return true;\n    }\n    \n\n    makeMenuItems = () => {\n        const {user} = store.getState()\n        console.log(user)\n        let menuItems = [{text:'Home', to:'/home'}, {text:'Menu', to:'/menu'}, {text:'About', to:'/about'}]\n\n\n        if(!this.isEmpty(user)){\n            menuItems = [...menuItems, {text: 'Admin', to: '/admin', icon: 'lock'}];  \n\n        }\n\n        const uniqueMenuItems = _.uniqBy([...menuItems, ...menuItems], item => item.to);\n\n        return uniqueMenuItems.map(({to, icon, text}) => (\n            <Menu.Item as={NavLink} to={to} key={to} selected={history.location.pathname === to}>\n            {icon && <Icon name={icon}/>}\n            {text}\n            </Menu.Item>\n        ))\n    }\n\n    componentDidMount()\n    {\n        let path = window.location.pathname.split('/')[1]\n        this.setState({ activeItem: path })\n    }\n\n    handleClick = (e, { name }) =>\n    {\n        this.setState({ active: name })\n        history.push({ pathname: name });\n    }\n    \n    render() \n    {\n        const { active } = this.state\n\n        return (\n            <Menu secondary >\n                <img src=\"./assets/images/Saran_Thai_Logo.svg\" alt=\"logo\"/>\n                {this.makeMenuItems()}\n            </Menu>\n        );    \n    }\n}\nexport default connect(({user}) => ({user}))(Header);\n","import React from 'react';\n\nexport default function Footer() \n{\n    return (\n        <footer>\n            {/* <Link exact activeClassName=\"active\" to=\"/home\">Home</Link>\n            <Link activeClassName=\"active\" to=\"/menu\">Menu</Link>\n            <Link activeClassName=\"active\" to=\"/admin\">Admin</Link> */}\n            <iframe src=\"https://www.facebook.com/plugins/like.php?href=https%3A%2F%2Fwww.facebook.com%2FSaran-thai-106762882727206%2F&width=155&layout=button_count&action=like&size=large&share=true&height=46&appId\" width=\"155\" height=\"46\" style={{ border: \"none\", overflow: \"hidden\" }} scrolling=\"no\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n        </footer>\n    );\n}\n","import React, { Component } from 'react';\nimport { Button, Container } from 'semantic-ui-react';\nimport history from '../history'\nexport default class Home extends Component\n{\n    constructor(props){\n        super(props);\n        this.state = {\n            clicked: false\n        }\n    }\n\n    render(){\n        return (\n            <Container style={{ width: '100%' }}>\n                <div id=\"home-hero\">\n\n                    <div id='hero-image'></div>\n\n                    <h1>Saran Thai</h1>\n                    <div>\n                        <Button primary size='huge' className=\"inverted\"\n                            onClick={() => history.push({pathname:'/menu',\n                                state:{ from: this.props.location.pathname }\n                            })}>View Menu\n                        </Button> \n                    </div>   \n                </div>\n                <div style={{width: \"100%\", display: \"flex\"}}>\n                    <div class=\"homePanel\" id=\"cafe\">\n                        Cafe coming soon\n                    </div>\n                    <div class=\"homePanel\" id=\"booking\">\n                        Bookings available <br />\n                        Contact us to book now\n                        <Button primary size='huge' className=\"inverted\"\n                            onClick={() => history.push({pathname:'/about',\n                                state:{ from: this.props.location.pathname }\n                            })}>Contact Us\n                        </Button> \n                    </div>\n                </div>\n            </Container>\n        )\n    }  \n}","import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\n\nexport default class About extends Component\n{\n    constructor(props){\n        super(props);\n        this.state = {\n            \n        }\n    }\n\n    render(){\n        return (\n            <Container style={{ width: '100%' }}>\n                <div className='wrapper'>\n                    \n                    <div id='about-us'>\n                        <h1>About Us</h1>\n                    </div>\n    \n                </div>\n            </Container>\n        )\n    }  \n}","import React, { Component } from 'react'\nimport history from '../history'\nimport { Form, Input, TextArea, Button, Select, Checkbox, SearchCategory } from 'semantic-ui-react'\nimport { pathToFileURL } from 'url'\nimport {Redirect} from 'react-router-dom'\n\nexport default class ProductForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      form: {\n        code: 0,\n        name_en: '',\n        name_th: '',\n        price: 0,\n        description: '',\n        category: '',\n        takeaway: false,\n      },\n      created: false,\n      categories: [],\n    }\n  }\n\n  componentDidMount(){\n    fetch('/category/all')\n    .then((data) => data.json())\n    .then((data) => {\n      let categories = data.data\n      this.setState({categories:categories})\n    })\n  }\n\n  submitForm = async () => {\n    await fetch('/menu/products', {\n        method: 'POST',\n        cache: 'no-cache',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.form)\n    })\n    .then(res => res.json(),\n      this.setState({created:true})\n    )\n  }\n\n  render() {\n\n    let {categories, created} = this.state;\n    console.log(categories)\n    console.log(this.state.form)\n    let values = []\n    categories.map((category, index) => {\n      values[index] = {id: category._id, name: category.name}\n    })\n \n    let categoryValues = []\n\n    values.map((value,index) => {\n      let obj ={}\n      obj['key'] = value.id\n      obj['value'] = value.id\n      obj['text'] = value.name\n      categoryValues.push(obj)\n    })\n\n    if(created){\n      history.push({pathname:'/menu'})\n    } \n\n    return(\n\n    <Form>\n      <Form.Group widths='equal'>\n        <Form.Field\n          id='form-input-control-name'\n          control={Input}\n          label='Dish Name English'\n          placeholder='Dish Name English'\n          onChange={(e, {value}) => {\n            let form = this.state.form;\n            form.name_en = value;\n            this.setState({form});\n        }}\n        />\n        <Form.Field\n          id='form-input-control-thai-name'\n          control={Input}\n          label='Dish Name Thai'\n          placeholder='Dish Name Thai'\n          onChange={(e, {value}) => {\n            let form = this.state.form;\n            form.name_th = value;\n            this.setState({form});\n        }}\n        />\n          <Form.Field\n          id='form-input-control-price'\n          control={Input}\n          label='Price'\n          placeholder='Price'\n          onChange={(e, {value}) => {\n            let form = this.state.form;\n            form.price = value;\n            this.setState({form});\n        }}\n        />\n        <Form.Field\n          id='form-input-control-code'\n          control={Input}\n          label='Menu Number'\n          placeholder='Code'\n          onChange={(e, {value}) => {\n            let form = this.state.form;\n            form.code = value;\n            this.setState({form});\n        }}\n        />\n              </Form.Group>\n      <Form.Field \n        placeholder='Category'\n        label='Select a category' \n        control={Select}\n        options={categoryValues}\n        onChange={(e,{value}) => {\n          let form = this.state.form;\n          form.category = value;\n          this.setState({form});\n      }} \n      />\n      <Form.Field\n        id='form-textarea-control-description'\n        control={TextArea}\n        label='Description'\n        placeholder='Description'\n        onChange={(e,{value}) => {\n          let form = this.state.form;\n          form.description = value;\n          this.setState({form});\n      }} \n      />\n      <Form.Field>\n        <Checkbox \n        label='Available for takeaway?'\n        onClick={() => {\n          let form = this.state.form\n          form.takeaway = !form.takeaway\n          this.setState({form})\n        }}\n         />\n      </Form.Field>\n      <Form.Field\n        id='form-button-control-add-dish'\n        control={Button}\n        content='Add Dish'\n        onClick={() => this.submitForm()}\n      />\n    </Form>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Input, Button} from 'semantic-ui-react'\n\nexport default class CategoryForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: ''\n    }\n  }\n\n  submitForm = async () => {\n    await fetch('/category', {\n      method: 'POST',\n      cache: 'no-cache',\n      headers: {\n          'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state)\n    }) \n    .then(res => res.json(),\n    this.setState({created:true}),\n    console.log(this.state)\n    ) \n  }\n\n  render() {\n    return(\n      <Form>\n        <Form.Group>\n          <Form.Field\n          id='form-input-control-name'\n          control={Input}\n          label='Category Name'\n          placeholder='Category Name'\n          onChange={(e, {value}) => {\n            let form = this.state;\n            form.name = value;\n            this.setState({form});\n          }}\n          />\n          </Form.Group>\n          <Button\n            id='form-button-control-create-category'\n            control={Button}\n            content='Create Category'\n            onClick={() => this.submitForm()}\n          />\n      </Form>\n    )\n  }\n}\n","import React, { Component } from 'react';\n// import {Redirect} from \"react-router-dom\";\nimport {\n    // Card,\n    // Menu,\n    Segment,\n    Header,\n    Modal,\n    Button,\n    Grid,\n    Divider\n} from 'semantic-ui-react'\nimport ProductForm from './ProductForm'\nimport CategoryForm from './CategoryForm'\n\nexport default class AdminDashboard extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n    }\n\topenModalHandler = () => {\n        this.setState({\n            isShowing: true\n        });\n    }\n\n    closeModalHandler = () => {\n        this.setState({\n            isShowing: false\n        });\n    }\n  \n    render(){\n        return(\n            <Segment style={{marginTop:'30px'}}>\n                <Grid columns={2} stackable textAlign='center'>\n                <Divider vertical>Or</Divider>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Modal \n                            dimmer={'inverted'}\n                            centered={false}\n                            trigger={<Button primary styling={{marginTop:'10px'}} onClick={() => {this.openModalHandler('inverted')}}>Add Dish</Button>}>\n                            <Modal.Content>\n                                <ProductForm/>\n                            </Modal.Content>\n                            </Modal>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Modal \n                            dimmer={'inverted'}\n                            centered={false}\n                            trigger={<Button primary onClick={() => {this.openModalHandler()}}>Create Category</Button>}>\n                                <Modal.Content>\n                                    <CategoryForm/>\n                                </Modal.Content>\n                            </Modal>\n                        </Grid.Column>\n                    </Grid.Row>\n                    </Grid>\n            </Segment>\n        )\n    }\n\n}","import React,{Component} from 'react';\nimport { \n    Container,\n    Menu,\n    Header,\n    Divider,\n    Grid,\n    Table,\n} from 'semantic-ui-react';\nimport  {store} from '../Store'\nimport AdminDashboard from '../components/AdminDashboard'\n\n\n\nexport default class StoreMenu extends Component\n{\n    constructor(props){\n        super(props);\n        this.state={\n            categories:[],\n\t\t\tproducts:[],\n\t\t\tisShowing: false,\n        }\n    }\n\n    componentDidMount() {\n        fetch('/category/all')\n        .then(data => data.json())\n        .then((data) => {\n        \tlet categories = data.data\n\t\t\tthis.setState({categories:categories})\n        })\n        .catch(err => {\n        \tconsole.log(err)\n        })\n\n        fetch('/menu/products/all')\n        .then(data => data.json())\n        .then((data) => {\n            let products = data.data\n            this.setState({products:products})\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n\n    }\n\n    isEmpty(obj) {\n        for(var key in obj) {\n            if(obj.hasOwnProperty(key))\n                return false;\n        }\n        return true;\n    }\n\n \n    render(){\n        const {categories, products} = this.state\n        let {user} = store.getState()\n        console.log(user)\n        console.log(this.isEmpty(user))\n    \n        \n        let adminButton = () => {\n            if(!this.isEmpty(user)){\n                return(\n                   <AdminDashboard/>\n                )\n            }\n        }\n\n\n        return (\n            <Container style={{ width:'100%' }}>\n                {adminButton()}\n                <Grid columns={2}>\n                    <Grid.Row>\n                        <Grid.Column width={3}>\n                        <Menu \n                            vertical \n                            text\n                            style={{marginLeft:'30px', marginTop:'15px',marginRight:'0px', marginBottom:'50px'}}\n                            >\n                            <Menu.Item><Header as='h2'>Categories</Header></Menu.Item>\n                            <Divider />\n                            {categories.map((category) => {\n                                return(\n                                \t<Menu.Item selectable key={category.id}>{category.name}</Menu.Item>\n                                )\n                            })}\n                        </Menu>                        \n                        </Grid.Column>\n                        <Grid.Column style={{marginLeft:'10px'}} width={12}>\n                                <Table basic='very' style={{marginTop:'32px'}}>\n                                        <Table.HeaderCell textAlign='center'>Name</Table.HeaderCell>\n                                        <Table.HeaderCell textAlign='center'>Category Name</Table.HeaderCell>\n                                        <Table.HeaderCell textAlign='center'>Price</Table.HeaderCell>\n                                </Table>\n                                <Divider/>\n                                {\n                                    products.map((product,index) => {\n                                        if(product.flavour){\n                                            return(\n                                                <div style={{marginBottom:'30px'}}>   \n                                                <div style={{marginBottom:'30px'}}>\n                                                    <span style={{display:'flex', width:'100%'}}>\n                                                        <h1 style={{marginRight:'68%', marginLeft:'5%'}}>{product.name_en}</h1>\n                                                        {product.flavour.map((flavour) =>\n                                                                <h1 style={{marginTop:'0px'}}>${flavour.price}</h1>,\n                                                        )}\n                                                    </span>\n                                                    <p style={{textAlign:'initial', marginLeft:'5%'}}>{product.description}</p>\n                                                </div>\n                                            <Divider/>\n                                            </div>\n                                            ) }else{\n                                                return(    \n                                                    <div style={{marginBottom:'30px'}}>   \n                                                        <div style={{marginBottom:'30px'}}>\n                                                            <span style={{display:'flex', width:'100%'}}>\n                                                                <h1 style={{marginRight:'68%', marginLeft:'5%'}}>{product.name_en}</h1>\n                                                                <h1 style={{marginTop:'0px'}}>${product.price}</h1>\n                                                            </span>\n                                                            <p style={{textAlign:'initial', marginLeft:'5%'}}>{product.description}</p>\n                                                        </div>\n                                                    <Divider/>\n                                                    </div>\n                                                )       \n                                            }\n                                    })\n                                }\n\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        )\n    }\n}","import * as actionType from \"./types\";\n\n// token actions\nexport const setToken = data => {\n  return {type: actionType.STORE_TOKEN, data};\n};\n\nexport const removeToken = () => {\n  return {type: actionType.REMOVE_TOKEN};\n};\n\n// user actions\nexport const storeUserDetails = data => {\n  return {type: actionType.STORE_USER, data};\n};\n\nexport const removeUserDetails = () => {\n  console.log(\"REMOVE USER\")\n  return {type: actionType.REMOVE_USER};\n};\n","import {store} from '../../Store';\nimport history from '../../history';\nimport {removeToken, removeUserDetails, storeUserDetails} from '../auth/actions';\nimport * as jwtDecode from 'jwt-decode';\n\n\nconst msTillExpiry = (token) => {\n  let d = jwtDecode(token);\n  let now = Date.now();\n  let exp = new Date(d['exp'] * 1000);  // epoch = unix epoch * 1000\n  return (exp - now);\n};\n\nconst hrsTillExpiry = (token) => {\n  return msTillExpiry(token) / (1000 * 60 * 60);  // convert difference in ms to difference in hours\n\n};\n\nconst isExpired = (token) => {\n  return hrsTillExpiry(token) <= 0; // if token <= 0, force re-login.\n};\n\n// const nearingExpiry = (token) => {\n//   let diff = hrsTillExpiry(token);\n//   return diff > 0 && diff < (5 * 24); // if token expires < 5 days, refresh it.\n// };\n\nexport const loggedIn = () => {\n  const token = store.getState().token;\n  return (token !== null) && (!isExpired(token));\n};\n\nexport const logout = () => {\n  fetch('auth/logout')\n  store.dispatch(removeToken());\n  store.dispatch(removeUserDetails());\n  history.push(\"/login\");\n};\n\nexport const fetchUserDetails = () => {\n  return (\n    fetch('auth/user')\n  .then(({data}) => {\n    console.log(data)\n    store.dispatch(storeUserDetails(data));\n    \n  })\n  )\n};\n\n","import React, { Component } from 'react';\nimport { Container,Button } from 'semantic-ui-react';\nimport { logout } from './utils/Auth';\n\nexport default class Admin extends Component\n{\n    constructor(props)\n    {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n    render()\n    {\n        return (\n           <Container style={{ width: '100%' }}>\n                <Button onClick={logout}>logout</Button>\n                <h1>Products</h1>\n\n                <table>\n                    <thead>\n                        <th>Code</th>\n                        <th>Name</th>\n                        <th>Description</th>\n                        <th>Price</th>\n                    </thead>\n\n                    <tbody>\n                        <td></td>\n                        <td></td>\n                    </tbody>\n\n                </table>\n\n            </Container>\n        )\n    }\n}","import React, { Component } from 'react';\nimport history from '../history'\nimport \n{\n    Container,\n    Segment,\n    Form,\n    Button,\n    Grid,\n    Header,\n    Divider,\n    Icon\n} from 'semantic-ui-react';\nimport {setToken, storeUserDetails, removeToken, removeUserDetails} from './auth/actions';\nimport {store} from '../Store'\n\nexport default class Login extends Component \n{\n    constructor(props)\n    {\n        super(props)\n        \n        this.state = {\n            isAuthenticated: false,\n            form: {\n                username: \"\",\n                password: \"\"\n            },\n            showPassword: false,\n            isLoading: false,\n        }\n    }\n\n    componentDidMount() \n    {\n        this.checkUser();\n    }\n\n    checkUser = async () =>\n    {\n        let data = await fetch('auth/user').then(res => res.json())\n        console.log(data)\n        if (data.success)\n        {\n            this.setState({ isAuthenticated: true })\n            console.log(data.user._id)\n            store.dispatch(setToken(data.user._id));\n            store.dispatch(storeUserDetails(data.user));\n            history.push('/home');\n            this.forceUpdate()\n        }\n    }\n\n    logout = async () => \n    {\n        await fetch('auth/logout')\n            .then(() => { this.setState({ isAuthenticated: false }); this.checkUser(); })\n            .catch(err => console.log(err))\n            this.forceUpdate()\n    }\n\n    login = async () => {\n        \n        let data = await fetch('auth/login', {\n            method: 'POST',\n            cache: 'no-cache',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.form)\n        })\n        .then(res => res.json())\n        this.setState({ isAuthenticated: data.success })\n        this.checkUser();\n    }\n\n    render() \n    {   \n        const {showPassword} = this.state;\n        const toggleShowPassword = () => {\n        this.setState({\n            showPassword: !showPassword\n        })\n        };\n        const eyeToggle = <Icon link name={showPassword ? 'eye' : 'eye slash'} onClick={toggleShowPassword}/>;\n      \n        return (\n            <Container>\n                <div className='wrapper'>\n                    <Grid centered>\n                        <Segment \n                            style={{width:'300px', height:'400px', marginTop:'20px', borderRadius:'20px 20px'}}\n                        >\n                            \n                            <Header \n                                as='h1' \n                                style={{color:'#40c5cd',marginTop:'20px', marginBottom:'25rpx'}}\n                            >\n                                Saran Thai\n                            </Header>\n                            <Divider/>\n                            <p>Please enter admin sign in details</p>\n                            \n                            <Form>\n                                <Form.Input\n                                    autoFocus\n                                    type=\"text\"\n                                    name=\"username\"\n                                    label=\"Username\"\n                                    autoComplete=\"username\"\n                                    placeholder=\"\"\n                                    onChange={(e, {value}) => {\n                                        let form = this.state.form;\n                                        form.username = value;\n                                        this.setState({form});\n                                    }}\n                                        />\n                                <Form.Input\n                                    autoFocus\n                                    fluid\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    label=\"Password\"\n                                    autoComplete=\"current-password\"\n                                    type={showPassword ? \"text\" : \"password\"}\n                                    icon={eyeToggle}\n                                    onChange={(e, {value}) => {\n                                        let form = this.state.form;\n                                        form.password = value;\n                                        this.setState({form});\n                                    }}\n                                    />\n                                <Button \n                                    type='submit'\n                                    style={{ backgroundColor: '#40c5cd', color: '#ffffff', marginTop: '20px', marginBottom: '20px' }}\n                                    onClick={() => this.login()}\n                                >\n                                    Sign in\n                                </Button>\n                            </Form>\n                        </Segment>\n                    </Grid>\n                </div>\n            </Container>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));","import React from 'react';\nimport { Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport '../styles/App.css';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Home from './Home';\nimport About from './About';\nimport StoreMenu from './StoreMenu';\nimport Admin from './Admin';\nimport Login from './Login';\nimport AdminDashboard from './AdminDashboard';\nimport history from '../history'\nimport {PersistGate} from 'redux-persist/integration/react';\nimport {store, persistor} from '../Store';\nimport {Provider} from 'react-redux'\n\n\n\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={(props) => (\n        Login.isAuthenticated === true\n        ? <Component {...props} />\n        : <Redirect to={{ pathname: '/home', state: { from: props.location } }} />\n    )} />\n)\n\nexport default function App() \n{\n    return (\n        <Provider store={store}>\n            <PersistGate\n                persistor={persistor}>\n                <Router history={history}>\n                    <div className='App'>\n                        <Header />\n                        <Switch>\n                            <Route path='/home' component={ Home } />\n                            <Route path='/menu' component={ StoreMenu } />\n                            <Route path='/about' component={ About } />\n                            <Route path='/login' component={ Login } />\n                            <Route path='/admin-dashboard' component={AdminDashboard} />\n                            <Route path='/admin' component={ Admin } />\n                            <Redirect from='*' to='/home' />\n                        </Switch>\n                        <Footer />\n                    </div>\n                </Router>\n            </PersistGate>\n        </Provider>\n    );\n}\n\n\n"],"sourceRoot":""}